import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

import arviz as az
from jax import random
import numpyro
import numpyro.distributions as dist
from numpyro.infer import NUTS, MCMC

seed = random.PRNGKey(0)


def model(C=None, D=None):
    a_bar = numpyro.sample("a_bar", dist.Normal(0, 1.5))
    sigma = numpyro.sample("sigma", dist.Exponential(1))
    b = numpyro.sample("b", dist.Normal(a_bar, sigma), sample_shape=(61,))
    logits = b[D]
    numpyro.sample("C", dist.Bernoulli(logits=logits), obs=C)


def run_model(df):
    kernel = NUTS(model)
    mcmc = MCMC(
        kernel,
        num_warmup=500,
        num_samples=10_000,
        num_chains=2,
        chain_method="sequential",
    )
    mcmc.run(
        seed,
        C=df["use.contraception"].values,
        D=df["district"].values,
    )
    mcmc.print_summary()

    return mcmc


def main():
    get_model_preds = False

    df = pd.read_csv("bangladesh.csv", sep=";")

    if get_model_preds:
        mcmc = run_model(df)
        samples = az.from_numpyro(mcmc)
        az.plot_trace(samples, var_names=["b"])

    """                mean       std    median      5.0%     95.0%     n_eff     r_hat
              b[0]     -0.54      0.53     -0.54     -1.37      0.37  19784.34      1.00
              b[1]     -0.99      0.19     -0.99     -1.30     -0.66  15157.51      1.00
              b[2]     -0.59      0.36     -0.58     -1.16      0.00  20073.94      1.00
              b[3]     -0.22      0.50     -0.23     -1.00      0.63  16946.53      1.00
              b[4]     -0.18      0.30     -0.18     -0.68      0.32  18370.54      1.00
              b[5]     -0.57      0.28     -0.57     -1.03     -0.11  22039.38      1.00
              b[6]     -0.81      0.24     -0.81     -1.19     -0.40  19508.29      1.00
              b[7]     -0.76      0.37     -0.75     -1.37     -0.17  16941.40      1.00
              b[8]     -0.51      0.29     -0.51     -0.97     -0.03  20264.80      1.00
              b[9]     -0.71      0.34     -0.70     -1.26     -0.15  22718.53      1.00
             b[10]     -1.12      0.43     -1.11     -1.82     -0.43  12856.44      1.00
             b[11]     -1.54      0.43     -1.52     -2.25     -0.84  11211.26      1.00
             b[12]     -0.60      0.31     -0.60     -1.13     -0.10  19796.22      1.00
             b[13]     -0.42      0.33     -0.42     -0.94      0.13  17616.95      1.00
             b[14]      0.39      0.18      0.39      0.10      0.68  16063.42      1.00
             b[15]     -0.56      0.34     -0.55     -1.09      0.02  14757.70      1.00
             b[16]     -0.12      0.35     -0.12     -0.70      0.44  15660.09      1.00
             b[17]     -0.74      0.33     -0.74     -1.28     -0.19  15143.52      1.00
             b[18]     -0.63      0.26     -0.63     -1.08     -0.21  20387.86      1.00
             b[19]     -0.50      0.32     -0.50     -1.02      0.03  17668.45      1.00
             b[20]     -0.48      0.38     -0.47     -1.09      0.14  16747.41      1.00
             b[21]     -0.49      0.36     -0.49     -1.06      0.11  18616.98      1.00
             b[22]     -0.96      0.37     -0.95     -1.56     -0.34  11383.06      1.00
             b[23]     -0.76      0.38     -0.75     -1.39     -0.14  17184.34      1.00
             b[24]     -1.17      0.43     -1.15     -1.85     -0.46  13322.32      1.00
             b[25]     -0.27      0.23     -0.27     -0.63      0.11  15360.94      1.00
             b[26]     -0.51      0.39     -0.51     -1.16      0.11  17683.00      1.00
             b[27]     -1.17      0.30     -1.16     -1.67     -0.68  13570.82      1.00
             b[28]     -0.96      0.28     -0.96     -1.40     -0.49  17476.42      1.00
             b[29]     -0.80      0.31     -0.79     -1.30     -0.28  16995.05      1.00
             b[30]     -0.13      0.23     -0.14     -0.51      0.24  19138.70      1.00
             b[31]     -0.30      0.29     -0.30     -0.78      0.17  16525.02      1.00
             b[32]     -0.97      0.36     -0.96     -1.54     -0.37  17061.18      1.00
             b[33]     -0.43      0.38     -0.42     -1.04      0.20  17063.00      1.00
             b[34]      0.28      0.30      0.27     -0.20      0.77  17400.43      1.00
             b[35]     -0.13      0.25     -0.13     -0.57      0.27  19617.25      1.00
             b[36]     -0.57      0.37     -0.57     -1.20      0.01  17693.74      1.00
             b[37]     -0.22      0.38     -0.22     -0.83      0.42  19807.72      1.00
             b[38]     -0.71      0.39     -0.70     -1.36     -0.08  17811.52      1.00
             b[39]     -0.20      0.32     -0.20     -0.71      0.32  18734.50      1.00
             b[40]     -0.26      0.27     -0.26     -0.69      0.19  17255.50      1.00
             b[41]     -0.20      0.31     -0.20     -0.73      0.30  19740.71      1.00
             b[42]     -0.23      0.40     -0.23     -0.88      0.44  20563.48      1.00
             b[43]     -0.04      0.26     -0.04     -0.45      0.40  17758.41      1.00
             b[44]     -0.95      0.34     -0.94     -1.49     -0.39  12717.25      1.00
             b[45]     -0.65      0.28     -0.65     -1.11     -0.18  16514.05      1.00
             b[46]     -0.00      0.20     -0.00     -0.32      0.34  21087.48      1.00
             b[47]     -0.34      0.37     -0.34     -0.94      0.29  16737.11      1.00
             b[48]     -0.07      0.27     -0.07     -0.52      0.36  14297.90      1.00
             b[49]     -0.85      0.48     -0.84     -1.63     -0.05  17195.75      1.00
             b[50]     -0.30      0.35     -0.30     -0.87      0.26  17420.13      1.00
             b[51]     -0.28      0.28     -0.27     -0.74      0.18  15895.39      1.00
             b[52]     -0.29      0.23     -0.29     -0.67      0.09  20002.47      1.00
             b[53]     -0.42      0.35     -0.42     -1.01      0.15  21298.57      1.00
             b[54]     -0.53      0.53     -0.52     -1.39      0.34  17073.99      1.00
             b[55]     -0.78      0.46     -0.76     -1.55     -0.05  13441.12      1.00
             b[56]      0.09      0.26      0.09     -0.34      0.52  15037.58      1.00
             b[57]     -1.07      0.35     -1.05     -1.62     -0.48  14508.72      1.00
             b[58]     -0.30      0.29     -0.30     -0.78      0.18  20969.46      1.00
             b[59]     -1.00      0.44     -0.99     -1.72     -0.28  14650.91      1.00
             b[60]     -1.13      0.25     -1.13     -1.53     -0.72  10058.81      1.00
    """

    grouped = df.groupby("district")
    district_proprtions = grouped["use.contraception"].sum() / grouped.size()

    plt.hist(district_proprtions)

    plt.show()


if __name__ == "__main__":
    main()
